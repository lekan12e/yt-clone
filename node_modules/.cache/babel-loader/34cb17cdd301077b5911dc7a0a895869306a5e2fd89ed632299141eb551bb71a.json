{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\yt\\\\youtube\\\\src\\\\components\\\\VideoDetails.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport ReactPlayer from 'react-player';\nimport { Typography, Box, Stack } from '@mui/material';\nimport { CheckCircle } from '@mui/icons-material';\nimport Videos from './Videos';\nimport { FetchFromApi } from '../utils/FetchFromApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoDetails = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [videoDetails, setVideoDetails] = useState(null);\n  useEffect(() => {\n    FetchFromApi(`videos?part=snippet,statistics&id=${id}`).then(data => setVideoDetails(data.items[0]));\n  }, [id]);\n  if (!(videoDetails !== null && videoDetails !== void 0 && videoDetails.snippet)) return \"loading...\";\n  return /*#__PURE__*/_jsxDEV(Box, {\n    minHeight: \"95vh\",\n    children: /*#__PURE__*/_jsxDEV(Stack, {\n      direction: {\n        xs: \"column\",\n        md: \"row\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        flex: 1,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            width: '100%',\n            position: 'sticky',\n            top: \"86px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(ReactPlayer, {\n            controls: true,\n            url: `https://www.youtube.com/watch?v=${id}`,\n            className: \"react-player\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            color: \"#fff\",\n            fontWeight: \"bold\",\n            p: \"2\",\n            children: videoDetails.snippet.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Stack, {\n            direction: \"row\",\n            justifyContent: \"space-between\",\n            sx: {\n              color: \"#fff\"\n            },\n            py: 1,\n            px: 2,\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/channel/${videoDetails.snippet.channelId}`,\n              children: /*#__PURE__*/_jsxDEV(Typography, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoDetails, \"vvDCPT27XGESxKl7aZbakcMlJKM=\", false, function () {\n  return [useParams];\n});\n_c = VideoDetails;\nexport default VideoDetails;\nvar _c;\n$RefreshReg$(_c, \"VideoDetails\");","map":{"version":3,"names":["React","useState","useEffect","Link","useParams","ReactPlayer","Typography","Box","Stack","CheckCircle","Videos","FetchFromApi","jsxDEV","_jsxDEV","VideoDetails","_s","id","videoDetails","setVideoDetails","then","data","items","snippet","minHeight","children","direction","xs","md","flex","sx","width","position","top","controls","url","className","fileName","_jsxFileName","lineNumber","columnNumber","variant","color","fontWeight","p","title","justifyContent","py","px","to","channelId","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/yt/youtube/src/components/VideoDetails.jsx"],"sourcesContent":["import React from 'react'\r\nimport { useState,useEffect } from 'react'\r\nimport { Link,useParams} from 'react-router-dom'\r\nimport ReactPlayer from 'react-player'\r\nimport { Typography, Box, Stack } from '@mui/material'\r\nimport { CheckCircle } from '@mui/icons-material'\r\nimport Videos from './Videos'\r\nimport { FetchFromApi } from '../utils/FetchFromApi'\r\n\r\nconst VideoDetails = () => {\r\n  const {id} = useParams()\r\n  const [videoDetails, setVideoDetails] = useState(null)\r\n  useEffect(() => {\r\n    FetchFromApi(`videos?part=snippet,statistics&id=${id}`)\r\n    .then((data) => setVideoDetails(data.items[0]))\r\n  }, [id])\r\n  if(!videoDetails?.snippet) return \"loading...\"\r\n  return (\r\n    <Box minHeight=\"95vh\">\r\n      <Stack direction={{xs: \"column\", md: \"row\"}}>\r\n        <Box flex={1}> \r\n          <Box sx={{width: '100%', position: 'sticky', top: \"86px\"}}>\r\n            <ReactPlayer controls url={`https://www.youtube.com/watch?v=${id}`} className=\"react-player\" />\r\n            <Typography variant='h4' color='#fff' fontWeight=\"bold\" p=\"2\">\r\n              {videoDetails.snippet.title}\r\n            </Typography>\r\n            <Stack direction=\"row\" justifyContent=\"space-between\" sx={{color: \"#fff\"}} py={1} px={2}>\r\n              <Link to={`/channel/${videoDetails.snippet.channelId}`}>\r\n                <Typography>\r\n                  {}\r\n                </Typography>\r\n              </Link>\r\n            </Stack>\r\n          </Box>\r\n        </Box>\r\n      </Stack>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default VideoDetails"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}